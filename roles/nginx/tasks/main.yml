---
# tasks file for nginx
- name: install package on centos
  yum:
    name:
      - gcc
      - make
      - pcre-devel
      - openssl-devel
      - zlib-devel
    state: present
  when:
    - ansible_facts['distribution'] == "CentOS"
- name: install package on ubuntu
  apt:
    name:
      - gcc
      - make
      - openssl
      - libssl-dev
      - libpcre3
      - libpcre3-dev
      - zlib1g-dev
    update_cache: yes
  when:
    - ansible_facts['distribution'] == "Ubuntu"
- name: create nginx group
  group:
    name: nginx
    system: true
    state: present
- name: create nginx user
  user:
    name: nginx
    group: nginx
    system: true
    shell: /sbin/nologin
- name: create a directory for install
  file:
    path: /nginx/run
    state: directory
    mode: 755
    owner: nginx
    group: nginx
- name: download nginx file
  unarchive:
    src: "{{ Nginx_Path }}"
    dest: /tmp
    remote_src: yes
    owner: nginx
    group: nginx
- name: configure
  shell: ./configure --prefix=/nginx --user=nginx --group=nginx \
                     --with-http_ssl_module \
                     --with-http_v2_module \
                     --with-http_realip_module \
                     --with-http_gzip_static_module \
                     --with-http_stub_status_module \
                     --with-pcre \
                     --with-stream \
                     --with-stream_ssl_module \
                     --with-stream_realip_module
  args:
    chdir: /tmp/nginx-{{ VERSION }}
- name: make
  shell: make && make install
  args:
    chdir: /tmp/nginx-{{ VERSION }}
- name: create a link
  file:
    src: /nginx/sbin/nginx
    dest: /usr/sbin/nginx
    state: link
- name: copy service file
  template:
    src: nginx.service.j2
    dest: /usr/lib/systemd/system/nginx.service
- name: copy config file
  template:
    src: nginx.conf.j2
    dest: /nginx/conf/nginx.conf
- name: start service
  systemd:
    name: nginx
    state: started
    daemon_reload: true
    enabled: true

